# U-Boot boot script for YIOS developer image
# Based on: https://github.com/Opentrons/buildroot/blob/opentrons-develop/board/opentrons/ot2/boot.scr
# The job of this script is
# - Figure out which partition is active
# - Point U-Boot at that partition
# - Boot it

# See if we have an env var for which partition to boot from (this might be
# edited from the booted system, but also might not be present)
if test -z "$yiospart"
then
    echo "No saved yiospart, defaulting to 2"
    setenv yiospart "2"
    saveenv
fi

if test "$yiospart" = "2"
then
    yiosold="3"
elif test "$yiospart" = "3"
then
    yiosold="2"
else
    echo "Bad yiospart $yiospart, defaulting to 2"
    setenv yiospart "2"
    saveenv
    yiosold="3"
fi

echo "Try booting from partition $yiospart with fallback to partition $yiosold"

# The raspi second stage bootloader (start.elf) puts the boot args in the
# flattened device tree. The boot args contain the partition the kernel
# will boot off of, so we have to pull the boot args, parse them, and then
# (later) edit them and resave them
fdt addr $fdt_addr
fdt get value fdtargs /chosen bootargs
# Iterate through bootargs and save everything but the boot partition
newargs=""
for arg in $fdtargs; do
    if test "root=/dev/mmcblk0p2" = $arg
    then
        echo "Found bootpart"
        bootpart=$arg
    else
        newargs="$newargs $arg"
    fi
done

while true; do
    echo "Try booting from partition $yiospart"

    to_boot="$newargs root=/dev/mmcblk0p$yiospart"
    fdt set /chosen bootargs "$to_boot"
    ext4load mmc 0:$yiospart $kernel_addr_r /zImage
    bootz $kernel_addr_r - $fdt_addr

    echo "Boot failed! Switching"
    tmp=$otpart
    setenv yiospart $yiosold
    saveenv
    yiosold=$tmp
done